class Github
	types
		-- Map of String (username) to Account
		public AccountsMap = map Utils`String to Account;
		
	values
	-- TODO Define values here
	
	instance variables
		public accounts: AccountsMap := { |-> };
		
	operations
		public Github: () ==> Github
		Github() == (return self)
		post card dom accounts = 0;
		
		public addAccount: Account ==> ()
		addAccount(acc) == (
			accounts(acc.username) := acc;
		)
		pre acc.username not in set dom accounts
		post accounts(acc.username) = acc;
	
		public numAccounts: () ==> nat
		numAccounts() == (return card dom accounts);
		
		public getRepositoriesByTags: set of Tag | set of Utils`String ==> set of Repository
		getRepositoriesByTags(tags) ==
			return {r | r in set dunion {rng a.repositories | a in set rng accounts} & repoMatchesTags(r, tags)}
		pre tags <> {};
	
	functions
		public static repoMatchesTags(r: Repository, tags: set of Utils`String | set of Tag) res: bool ==
		forall t in set tags & (if isofclass(Tag, t) then t.name else t) in set {tInner.name | tInner in set r.tags};
		
end Github