class IssueTest
types
-- TODO Define types here
values
-- TODO Define values here
instance variables
	issue: Issue := new Issue("#7400", "test title", "test description")
operations
	private testAddMessage: () ==> ()
	testAddMessage() == (
		TestUtils`assertTrue(issue.numMessages() = 0);
		issue.addMessage(new Message("msgID", "Content", new User("username")));
		TestUtils`assertTrue(issue.numMessages() = 1);
		issue.addMessage(new Message("msgID2", "Content2", new User("username2")));
		TestUtils`assertTrue(issue.numMessages() = 2);
	);
	
	private testAsignUser: () ==> ()
	testAsignUser() == (
		TestUtils`assertTrue(issue.numAssignees() = 0);
		issue.assignUser(new User("username"));
		TestUtils`assertTrue(issue.numAssignees() = 1);
		issue.assignUser(new User("username2"));
		TestUtils`assertTrue(issue.numAssignees() = 2);
	);
	
	public static main: () ==> ()
	main() ==	(
		let i = new IssueTest() in (
			i.testAddMessage();
			i.testAsignUser();
		);
	);

functions
-- TODO Define functiones here
traces
-- TODO Define Combinatorial Test Traces here
end IssueTest