class UserTest

	instance variables
		private users : seq of User := [new User("n") | dummy in set {1, ..., 5}];
		private user : User := new User("username");
	
	operations
		private testFollowUnfollow: () ==> ()
		testFollowUnfollow() == (
			let u = TestUtils`randomUser(users) in (
				user.follow(u);
				TestUtils`assertTrue(u in set user.getFollowing() and user in set u.getFollowers());
				user.clearFollowing();
				TestUtils`assertFalse(u in set user.getFollowing() or user in set u.getFollowers());
			)
		);
		
		private testNewRepo: () ==> ()
		testNewRepo() == (
			let r = user.newRepository("FEUP-MFES", true) in (
				TestUtils`assertTrue(user.repositories(r.name) = r)
			);
		);
		
		private testStarUnstar: () ==> ()
		testStarUnstar() == (
			let r = (TestUtils`randomUser(users)).newRepository("FEUP-MFES", true) in (
				TestUtils`assertTrue(user.getStars() = {});
				user.star(r);
				TestUtils`assertTrue(user.getStars() = {r});
				user.unstar(r);
				TestUtils`assertTrue(user.getStars() = {});
			);
		);
	
		public static main: () ==> ()
		main() == (
			let ut = new UserTest() in (
				ut.testFollowUnfollow();
				ut.testNewRepo();
				ut.testStarUnstar();
			);
		);

	traces
		FollowUnfollow :
			user.clearFollowing();
			(let u = TestUtils`randomUser(users) in user.follow(u)){1, 5};
			(let u = TestUtils`randomUser(users) in user.unfollow(u)){1, 5};

end UserTest