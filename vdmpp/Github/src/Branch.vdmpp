class Branch

instance variables
	public name: VDMUtils`String;
	public isProtected: bool;

	private commits: seq of Commit := []; -- Chronological order assured by invariant

	inv forall i1, i2 in set inds commits & 
		i1 < i2 => mk_Date`DateComparable(commits(i1).timestamp) < mk_Date`DateComparable(commits(i2).timestamp);
	
operations
	public Branch: VDMUtils`String * bool ==> Branch
	Branch(n, prot) == (
		name := n;
		isProtected := prot;
		return self;
	)
	pre n <> []
	post name = n and isProtected = prot;
	
	public commit: Commit ==> ()
	commit(c) == (
		commits := commits ^ [c];
	)
	pre c not in set elems commits
	post c in set elems commits;
	
	public getCommits: () ==> seq of Commit
	getCommits() == return commits;

end Branch